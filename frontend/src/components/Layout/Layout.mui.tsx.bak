import { useState } from 'react'
import { Outlet, useNavigate, useLocation } from 'react-router-dom'
import { Layout as AntLayout, Grid, Typography, Drawer, Button, Space } from 'antd'
import { MenuOutlined, DashboardOutlined, UserOutlined, BarChartOutlined, SettingOutlined } from '@ant-design/icons'
import { useTranslation } from 'react-i18next'
import { useAuth } from '../../contexts/AuthContext'
import Navigation from './Navigation'

const { Header, Content } = AntLayout
const { useBreakpoint } = Grid
const { Title } = Typography

const Layout = () => {
  const [mobileOpen, setMobileOpen] = useState(false)
  const [drawerWidth, setDrawerWidth] = useState(280)
  const screens = useBreakpoint()
  const isMobile = !screens.sm
  const isTablet = screens.sm && !screens.md
  const { t } = useTranslation()
  const navigate = useNavigate()
  const location = useLocation()
  const { user } = useAuth()
  const isAdmin = user?.role?.name?.toLowerCase() === 'administrator'

  const handleDrawerToggle = () => {
    setMobileOpen(!mobileOpen)
  }

  const handleDrawerClose = () => {
    setMobileOpen(false)
  }

  const mobileNavItems = [
    {
      key: '/',
      icon: <DashboardOutlined />,
      label: t('navigation.dashboard'),
    },
    isAdmin ? {
      key: '/users',
      icon: <UserOutlined />,
      label: t('navigation.users'),
    } : {
      key: '/observations',
      icon: <DashboardOutlined />,
      label: t('navigation.observations'),
    },
    {
      key: '/reports',
      icon: <BarChartOutlined />,
      label: t('navigation.reports'),
    },
    {
      key: '/settings',
      icon: <SettingOutlined />,
      label: t('navigation.settings'),
    },
  ].filter(Boolean)

  return (
    <AntLayout style={{ minHeight: '100vh' }}>
      {/* Mobile Header */}
      {isMobile && (
        <Header
          style={{
            position: 'fixed',
            zIndex: 1000,
            width: '100%',
            backgroundColor: '#04AA6D',
            display: 'flex',
            alignItems: 'center',
            padding: '0 16px',
            boxShadow: '0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)',
          }}
        >
          <Button
            type="text"
            icon={<MenuOutlined style={{ fontSize: '1.75rem', color: 'white' }} />}
            onClick={handleDrawerToggle}
            style={{ marginRight: 16 }}
          />
          <Title 
            level={4} 
            style={{ 
              margin: 0, 
              color: 'white',
              fontSize: '1.25rem',
              fontWeight: 500,
              letterSpacing: '0.5px'
            }}
          >
            PLP Mentor
          </Title>
        </Header>
      )}

      <AntLayout>
        {/* Desktop Navigation */}
        {!isMobile && (
          <Navigation
            open={true}
            onClose={handleDrawerClose}
            onToggle={handleDrawerToggle}
            onWidthChange={setDrawerWidth}
          />
        )}

        {/* Mobile Navigation Drawer */}
        {isMobile && (
          <Drawer
            placement="left"
            open={mobileOpen}
            onClose={handleDrawerClose}
            width={280}
            bodyStyle={{ padding: 0 }}
          >
            <Navigation
              open={true}
              onClose={handleDrawerClose}
              onToggle={handleDrawerToggle}
              onWidthChange={setDrawerWidth}
            />
          </Drawer>
        )}

        {/* Main Content */}
        <Content
          style={{
            marginLeft: isMobile ? 0 : drawerWidth,
            marginTop: isMobile ? 64 : 0,
            marginBottom: isMobile ? 64 : 0,
            padding: isMobile ? 16 : 24,
            minHeight: '100vh',
            backgroundColor: '#f0f2f5',
            transition: 'all 0.3s',
          }}
        >
          <div style={{ 
            maxWidth: isTablet ? 768 : 1200, 
            margin: '0 auto',
            padding: isMobile ? 0 : '0 16px'
          }}>
            <Outlet />
          </div>
        </Content>
      </AntLayout>
      
      {/* Mobile Bottom Navigation */}
      {isMobile && (
        <div 
          style={{ 
            position: 'fixed', 
            bottom: 0, 
            left: 0, 
            right: 0,
            zIndex: 1000,
            backgroundColor: 'white',
            boxShadow: '0 -2px 5px 0 rgba(0,0,0,0.16), 0 -2px 10px 0 rgba(0,0,0,0.12)',
            height: 64,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'space-around',
            padding: '0 8px',
          }}
        >
          {mobileNavItems.map(item => (
            <Button
              key={item.key}
              type="text"
              icon={item.icon}
              onClick={() => navigate(item.key)}
              style={{
                height: '100%',
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
                justifyContent: 'center',
                gap: 4,
                color: location.pathname === item.key ? '#04AA6D' : '#666',
                border: 'none',
              }}
            >
              <span style={{ fontSize: '0.75rem' }}>{item.label}</span>
            </Button>
          ))}
        </div>
      )}
    </AntLayout>
  )
}

export default Layout